{"version":3,"sources":["felixhayashi/session-lock/js/startup.js"],"names":["handleStartSession","window","onbeforeunload","$tw","rootWidget","dispatchEvent","type","handleEndSession","$tm","utils","setField","lockSession","wiki","getTiddler","userName","addTiddler","Tiddler","title","tags","getCreationFields","getModificationFields","disableSaving","addEventListener","tiddlersToBeHidden","forEach","tRef","listeners","startup","addTWlisteners","dialogParams","dialog","buttons","preselects","dialogManager","open","isConfirmed","outputTObj","getField","exports","name","platforms","after","synchronous"],"mappings":"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","file":"../../../../felixhayashi/session-lock/js/startup.js","sourcesContent":["/*\\\n\ntitle: $:/plugins/felixhayashi/session-lock/startup.js\ntype: application/javascript\nmodule-type: startup\n\n@preserve\n\n\\*/\n\n/*** Code **********************************************************/\n\nconst handleStartSession = () => {\n\n  window.onbeforeunload = () => false;\n  $tw.rootWidget.dispatchEvent({ type: 'tm-browser-refresh' });\n\n};\n\nconst handleEndSession = () => {\n\n  // remove any username\n  $tm.utils.setField('$:/status/UserName', 'text', '');\n  $tw.rootWidget.dispatchEvent({ type: 'tm-save-wiki' });\n  $tw.rootWidget.dispatchEvent({ type: 'tm-browser-refresh' });\n\n};\n\nconst lockSession = userName => {\n\n  if (!$tw.wiki.getTiddler(userName)) {\n    $tw.wiki.addTiddler(new $tw.Tiddler(\n      { title: userName, tags: [ 'User' ] },\n      $tw.wiki.getCreationFields(),\n      $tw.wiki.getModificationFields()\n    ));\n  }\n  // set current user\n  $tm.utils.setField('$:/status/UserName', 'text', userName);\n  // save wiki\n  $tw.rootWidget.dispatchEvent({ type: 'tm-save-wiki' });\n\n};\n\n/**\n * Prevent the user from saving the wiki.\n */\nconst disableSaving = () => {\n\n  $tw.rootWidget.addEventListener('tm-auto-save-wiki', function() {});\n  $tw.rootWidget.addEventListener('tm-save-wiki', function() {});\n  // remove any username\n  $tm.utils.setField('$:/status/UserName', 'text', '');\n  // hide buttons\n  const tiddlersToBeHidden = [\n    '$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/save-wiki',\n    '$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/new-tiddler',\n    '$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/save-wiki',\n    '$:/config/PageControlButtons/Visibility/$:/core/ui/Buttons/control-panel',\n    '$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/edit',\n    '$:/config/ViewToolbarButtons/Visibility/$:/core/ui/Buttons/more-tiddler-actions',\n    '$:/config/ViewToolbarButtons/Visibility/$:/plugins/felixhayashi/tiddlymap/misc/quickConnectButton'\n  ];\n\n  tiddlersToBeHidden.forEach(tRef => $tm.utils.setField(tRef, 'text', 'hide'));\n\n};\n\nconst listeners = {\n  'selock:tm-start-session': handleStartSession,\n  'selock:tm-end-session': handleEndSession\n};\n\nconst startup = () => {\n\n  // add handlers to the root widget to make them available from everywhere\n  $tm.utils.addTWlisteners(listeners, $tw.rootWidget, this);\n\n  const dialogParams = {\n    dialog: {\n      buttons: 'ok',\n      preselects: { 'mode': 'read' }\n    }\n  };\n\n  $tm.dialogManager.open('initialDialog', dialogParams, (isConfirmed, outputTObj) => {\n\n    if (outputTObj) {\n      const userName = $tm.utils.getField(outputTObj, 'user');\n      if (userName) {\n        lockSession(userName);\n        return;\n      }\n    }\n\n    disableSaving();\n  });\n\n};\n\n/*** Exports *******************************************************/\n\nexports.name = 'sessionlock';\nexports.platforms = [ 'browser' ];\nexports.after = [ 'story', 'tmap.caretaker' ];\nexports.synchronous = true;\nexports.startup = startup;\n"],"sourceRoot":"../../../../../src/plugins"}